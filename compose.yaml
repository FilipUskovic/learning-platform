services:
  postgres:
    image: 'postgres:latest'
    environment:
      POSTGRES_DB: learning_platform
      POSTGRES_USER: ${DB_USER:-learning_platform}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-learning_platform}


    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U learning_platform"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

# kafka zahtijeva zookeepr-a za kordinaciju kluster
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000


  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "29092:29092" #eksterni listener
    environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        KAFKA_MESSAGE_MAX_BYTES: 2097152  # 2MB
        KAFKA_REPLICA_FETCH_MAX_BYTES: 2097152  # 2MB
        KAFKA_FETCH_MAX_BYTES: 2097152  # 2MB
    depends_on:
      - zookeeper
    healthcheck:
      # jednostavan tcp check
      test: ["CMD", "nc", "-z", "localhost", "29092"]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  postgres_data:
  redis_data:

